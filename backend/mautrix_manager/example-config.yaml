# Homeserver details.
homeserver:
    # The server name of the homeserver.
    domain: example.com
    # Client-server API URL.
    client_url: http://localhost:8008
    # Federation API URL. This is used for verifying OpenID tokens received from clients.
    federation_url: http://localhost:8008

docker:
    # Docker API socket.
    host: unix:///run/docker.sock

# Which UI features should be enabled?
features:
    docker_controls: true
    internal_bridge_info: true

# mautrix-manager server settings
server:
    # Hostname and port where mautrix-manager should listen.
    host: 0.0.0.0
    port: 29324
    # Database URI. Currently only supports postgres://user:password@host/dbname
    database: postgres:///mautrix-manager
    # Override path from where to load UI resources.
    # Set to false to using pkg_resources to find the path.
    # Optionally, you can use another web server to serve the UI and only proxy /api to the backend.
    override_resource_path: false

mixpanel:
    # Mixpanel token for tracking user actions. Tracking is disabled if token is null.
    token: null

# Prometheus telemetry config. Requires prometheus-client to be installed.
metrics:
    enabled: false
    listen_port: 8000

# Bridge API URLs and secrets. If secret is null, the bridge is disabled.
bridges:
    mautrix-telegram:
        url: http://localhost:29317/_matrix/provision/v1
        secret: null
        # Whether or not to allow logging in with a bot token
        allow_bot_login: true
    mautrix-whatsapp:
        url: http://localhost:29318/_matrix/provision/v1
        secret: null
    mautrix-facebook:
        url: http://localhost:29319/public
        secret: null
        # This can be changed to facebook.com if you want to use that instead
        domain: messenger.com
    mautrix-hangouts:
        url: http://localhost:29320/login
        secret: null
    mautrix-twitter:
        url: http://localhost:29327/_matrix/provision/v1
        secret: null
    mx-puppet-slack:
        url: http://localhost:8432/_matrix/provision/v1
        secret: null
        # Slack API client ID, same as in the mx-puppet-slack config.
        client_id: null
        # Custom OAuth redirect URI format. If set to null, the manager URL is used as-is.
        # {localpart} and {homeserver} are replaced with the corresponding values from the user ID.
        custom_oauth_redirect: null
    mx-puppet-twitter:
        url: http://localhost:6000/_matrix/provision/v1
        secret: null
        # Custom OAuth redirect URI format. If set to null, the manager URL is used as-is.
        # {localpart} and {homeserver} are replaced with the corresponding values from the user ID.
        # Note that Twitter requires the path to match exactly, so use query params if you want to
        # store extra info in the URL.
        custom_oauth_redirect: null
        # Whether or not to use a separate static linking page.
        # If this is enabled, custom_oauth_redirect should point to /ui/twitter-link/callback
        static_linking_page: false
    mx-puppet-instagram:
        url: http://localhost:8434/_matrix/provision/v1
        secret: null

# Permissions for the manager.
# * `user` gives normal bridge login access
# * `admin` gives access to docker and user impersonation for bridge login.
# Permission keys may be user IDs or server names
permissions:
    '@user:example.com': admin

logging:
    version: 1
    formatters:
        colored:
            (): mautrix.util.color_log.ColorFormatter
            format: "[%(asctime)s] [%(levelname)s@%(name)s] %(message)s"
        normal:
            format: "[%(asctime)s] [%(levelname)s@%(name)s] %(message)s"
    handlers:
        file:
            class: logging.handlers.RotatingFileHandler
            formatter: normal
            filename: ./mautrix-manager.log
            maxBytes: 10485760
            backupCount: 10
        console:
            class: logging.StreamHandler
            formatter: colored
    loggers:
        mau:
            level: DEBUG
        aiohttp:
            level: INFO
    root:
        level: DEBUG
        handlers: [file, console]
